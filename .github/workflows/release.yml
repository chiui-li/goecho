name: Build and Release

on:
  push:
    tags:
      - "v*"
permissions:
  contents: write
jobs:
  build:
    name: Build for ${{ matrix.goos }} / ${{ matrix.goarch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Build binary
        run: |
          mkdir -p dist
          EXT=""
          if [ "${{ matrix.goos }}" = "windows" ]; then EXT=".exe"; fi
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/goecho-${{ matrix.goos }}-${{ matrix.goarch }}${EXT}

      - name: Package artifact
        run: |
          cd dist
          if [ "${{ matrix.goos }}" = "windows" ]; then
            zip goecho-${{ matrix.goos }}-${{ matrix.goarch }}.zip goecho-${{ matrix.goos }}-${{ matrix.goarch }}.exe
            rm goecho-${{ matrix.goos }}-${{ matrix.goarch }}.exe
          else
            tar -czf goecho-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz goecho-${{ matrix.goos }}-${{ matrix.goarch }}
            rm goecho-${{ matrix.goos }}-${{ matrix.goarch }}
          fi
          cd ..

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: goecho-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/*${{ matrix.goos }}-${{ matrix.goarch }}*

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/* # 上传所有压缩包
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
